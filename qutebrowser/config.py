# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Aliases for commands. The keys of the given dictionary are the
# aliases, while the values are the commands they map to.
# Type: Dict
c.aliases = {'q': 'quit', 'w': 'session-save', 'wq': 'quit --save', \
        'exit': 'quit', 'bd': 'tab-close'}

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Show a scrollbar.
# Type: Bool
c.scrolling.bar = True

# Enable smooth scrolling for web pages. Note smooth scrolling does not
# work with the `:scroll-px` command.
# Type: Bool
c.scrolling.smooth = False

# Languages to use for spell checking. You can check for available
# languages and install dictionaries using scripts/dictcli.py. Run the
# script with -h/--help for instructions.
# Type: List of String
# Valid values:
#   - af-ZA: Afrikaans (South Africa)
#   - bg-BG: Bulgarian (Bulgaria)
#   - ca-ES: Catalan (Spain)
#   - cs-CZ: Czech (Czech Republic)
#   - da-DK: Danish (Denmark)
#   - de-DE: German (Germany)
#   - el-GR: Greek (Greece)
#   - en-AU: English (Australia)
#   - en-CA: English (Canada)
#   - en-GB: English (United Kingdom)
#   - en-US: English (United States)
#   - es-ES: Spanish (Spain)
#   - et-EE: Estonian (Estonia)
#   - fa-IR: Farsi (Iran)
#   - fo-FO: Faroese (Faroe Islands)
#   - fr-FR: French (France)
#   - he-IL: Hebrew (Israel)
#   - hi-IN: Hindi (India)
#   - hr-HR: Croatian (Croatia)
#   - hu-HU: Hungarian (Hungary)
#   - id-ID: Indonesian (Indonesia)
#   - it-IT: Italian (Italy)
#   - ko: Korean
#   - lt-LT: Lithuanian (Lithuania)
#   - lv-LV: Latvian (Latvia)
#   - nb-NO: Norwegian (Norway)
#   - nl-NL: Dutch (Netherlands)
#   - pl-PL: Polish (Poland)
#   - pt-BR: Portuguese (Brazil)
#   - pt-PT: Portuguese (Portugal)
#   - ro-RO: Romanian (Romania)
#   - ru-RU: Russian (Russia)
#   - sh: Serbo-Croatian
#   - sk-SK: Slovak (Slovakia)
#   - sl-SI: Slovenian (Slovenia)
#   - sq: Albanian
#   - sr: Serbian
#   - sv-SE: Swedish (Sweden)
#   - ta-IN: Tamil (India)
#   - tg-TG: Tajik (Tajikistan)
#   - tr-TR: Turkish (Turkey)
#   - uk-UA: Ukrainian (Ukraine)
#   - vi-VN: Vietnamese (Viet Nam)
c.spellcheck.languages = ['en-US']

# Hide the statusbar unless a message is shown.
# Type: Bool
c.statusbar.hide = False

# This setting can be used to map keys to other keys. When the key used
# as dictionary-key is pressed, the binding for the key used as
# dictionary-value is invoked instead. This is useful for global
# remappings of keys, for example to map Ctrl-[ to Escape. Note that
# when a key is bound (via `bindings.default` or `bindings.commands`),
# the mapping is ignored.
# Type: Dict
c.bindings.key_mappings = {'<Ctrl+6>': '<Ctrl+^>', '<Ctrl+Enter>': '<Ctrl+Return>', '<Ctrl+j>': '<Return>', '<Ctrl+m>': '<Return>', '<Ctrl+[>': '<Escape>', '<Enter>': '<Return>', '<Shift+Enter>': '<Return>', '<Shift+Return>': '<Return>'}


# =============================================================================
c.tabs.position = "top"
c.completion.shrink = True

# Unbind Alt+1, Alt+2, etc...
config.unbind('<Alt-1>', mode='normal')
config.unbind('<Alt-2>', mode='normal')
config.unbind('<Alt-3>', mode='normal')
config.unbind('<Alt-4>', mode='normal')
config.unbind('<Alt-5>', mode='normal')
config.unbind('<Alt-6>', mode='normal')
config.unbind('<Alt-7>', mode='normal')
config.unbind('<Alt-8>', mode='normal')
config.unbind('<Alt-9>', mode='normal')

# Unbind d and D from closing tab; Ctrl+q, ZQ, and ZZ from quitting;
# and Ctrl+Shift+w from closing window
config.unbind('d', mode='normal')
config.unbind('D', mode='normal')
config.unbind('<Ctrl-q>', mode='normal')
config.unbind('ZQ', mode='normal')
config.unbind('ZZ', mode='normal')
config.unbind('<Ctrl-Shift-w>', mode='normal')

# Unbind Ctrl+v and bind Alt+v to passthrough mode
# Suggestion for new binding still needed
config.unbind('<Ctrl-v>', mode='normal')
config.unbind('<Ctrl-v>', mode='passthrough')
config.bind('<Alt-v>', 'enter-mode passthrough', mode='normal')
config.bind('<Alt-v>', 'leave-mode', mode='passthrough')

# Use Ctrl+num to go to tab
config.bind('<Ctrl-1>', 'tab-focus 1')
config.bind('<Ctrl-2>', 'tab-focus 2')
config.bind('<Ctrl-3>', 'tab-focus 3')
config.bind('<Ctrl-4>', 'tab-focus 4')
config.bind('<Ctrl-5>', 'tab-focus 5')
config.bind('<Ctrl-6>', 'tab-focus 6')
config.bind('<Ctrl-7>', 'tab-focus 7')
config.bind('<Ctrl-8>', 'tab-focus 8')
config.bind('<Ctrl-9>', 'tab-focus 9')
config.bind('<Ctrl-0>', 'tab-focus -1')

# Alt+Left and Alt+Right for history navigation
config.bind('<Alt-Left>', 'back')
config.bind('<Alt-Right>', 'forward')

# Search engines
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}', \
        'wiki': 'https://en.wikipedia.org/wiki/Special:Search/{}'}

# Default monospace fonts. Whenever "monospace" is used in a font
# setting, it's replaced with the fonts listed here.
# Type: Font
c.fonts.monospace = '"mononoki Nerd Font", "xos4 Terminus", Terminus, \
        Monospace, "DejaVu Sans Mono", Monaco, "Bitstream Vera Sans Mono", \
        "Andale Mono", "Courier New", Courier, "Liberation Mono", monospace, \
        Fixed, Consolas, Terminal'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = '11pt "DejaVu"'

c.tabs.last_close = 'close'
c.confirm_quit = ['always']

c.statusbar.widgets = ['keypress', 'url', 'scroll', 'progress']

# ============================ Colors =========================================
gruvbox = {
    'border-color':         '#5a4b46',
    'bg-color':             '#282828',
    'inactive-bg-color':    '#282828',
    'text-color':           '#fbf1c7',
    'inactive-text-color':  '#9c8b85',
    'urgent-bg-color':      '#e53935',
    'indicator-color':      '#7f142c'
    }

deus = {
    'black':    '#262626',
    'green':    '#87d787',
    'blue':     '#00afff',
    'pink':     '#d75fd7'
    }


c.colors.tabs.bar.bg = gruvbox['bg-color']

# Active tab colors
c.colors.tabs.selected.even.fg = gruvbox['text-color']
c.colors.tabs.selected.even.bg = gruvbox['bg-color']
c.colors.tabs.selected.odd.fg = gruvbox['text-color']
c.colors.tabs.selected.odd.bg = gruvbox['bg-color']

# Inactive tab colors
c.colors.tabs.even.fg = gruvbox['inactive-text-color']
c.colors.tabs.even.bg = gruvbox['inactive-bg-color']
c.colors.tabs.odd.fg = gruvbox['inactive-text-color']
c.colors.tabs.odd.bg = gruvbox['inactive-bg-color']

# Status bar colors
c.colors.statusbar.insert.fg = deus['black']
c.colors.statusbar.insert.bg = deus['blue']
c.colors.statusbar.url.fg = gruvbox['text-color']
c.colors.statusbar.url.success.http.fg = gruvbox['text-color']
c.colors.statusbar.progress.bg = 'lime'

